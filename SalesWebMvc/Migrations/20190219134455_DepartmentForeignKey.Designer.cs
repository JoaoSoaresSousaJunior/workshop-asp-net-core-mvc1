// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SalesWebMvc.Models;

namespace SalesWebMvc.Migrations
{
    [DbContext(typeof(SalesWebMvcContext))]
    [Migration("20190219134455_DepartmentForeignKey")]
    partial class DepartmentForeignKey
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.8-servicing-32085")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("SalesWebMvc.Models.Departments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Descricao");

                    b.HasKey("Id");

                    b.ToTable("Departments");
                });

            modelBuilder.Entity("SalesWebMvc.Models.SalesRecords", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataVenda");

                    b.Property<double>("Quantidade");

                    b.Property<int>("SaleStatus");

                    b.Property<int?>("SellersId");

                    b.HasKey("Id");

                    b.HasIndex("SellersId");

                    b.ToTable("SalesRecords");
                });

            modelBuilder.Entity("SalesWebMvc.Models.Sellers", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("DataNascimento");

                    b.Property<int>("DepartmentsId");

                    b.Property<string>("Email");

                    b.Property<string>("Nome");

                    b.Property<double>("SalarioBase");

                    b.HasKey("Id");

                    b.HasIndex("DepartmentsId");

                    b.ToTable("Sellers");
                });

            modelBuilder.Entity("SalesWebMvc.Models.SalesRecords", b =>
                {
                    b.HasOne("SalesWebMvc.Models.Sellers", "Sellers")
                        .WithMany()
                        .HasForeignKey("SellersId");
                });

            modelBuilder.Entity("SalesWebMvc.Models.Sellers", b =>
                {
                    b.HasOne("SalesWebMvc.Models.Departments", "Departments")
                        .WithMany("Sellers")
                        .HasForeignKey("DepartmentsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
